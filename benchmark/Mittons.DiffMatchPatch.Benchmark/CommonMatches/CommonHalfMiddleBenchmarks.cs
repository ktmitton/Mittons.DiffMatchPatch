using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Order;
using Mittons.DiffMatchPatch.Benchmark.Original;
using Mittons.DiffMatchPatch.Extensions;

namespace Mittons.DiffMatchPatch.Benchmark.CommonMatches;

[MemoryDiagnoser]
[Orderer(SummaryOrderPolicy.FastestToSlowest)]
[RankColumn]
public class CommonHalfMiddleBenchmarks
{
    public static readonly (string left, string right)[] TestCases = [
        ("abc", "xyz"),
        ("1234abcdef", "1234xyz"),
        ("1234", "1234xyz"),
        ("hello world", "hello universe"),
        ("abcdefg", "abcxyz"),
abcdefxyz"),

        ("abc", "xyz"),
        ("abcdef1234", "xyz1234"),
        ("1234", "xyz1234"),
        ("world hello", "universe hello"),
        ("defgabc", "xyzabc"),
        ("abcdefxyz

        ("1234567890", "abcdef"),
        ("12345", "23"),
        ("1234567890", "a345678z"),
        ("a345678z", "1234567890"),
        ("abc56789z", "1234567890"),
        ("a23456xyz", "1234567890"),
        ("121231234123451234123121", "a1234123451234z"),
        ("x-=-=-=-=-=-=-=-=-=-=-=-=", "xx-=-=-=-=-=-=-="),
        ("-=-=-=-=-=-=-=-=-=-=-=-=y", "-=-=-=-=-=-=-=yy"),
        ("qHilloHelloHew", "xHelloHeHulloy"),
        ("abcdef", "defabc"),

        ("", "abcd"),
        ("123456", "abcd"),
        ("abc", "abcd"),
        ("123456xxx", "xxxabcd"),
        ("fi", "\ufb01i"),
    ];

    public static diff_match_patch OriginalDiffMatchPatch = new();

    public static List<(bool hasCommonHalfMiddle, string[]? vals)> LegacyApproach()
    {
        List<(bool hasCommonHalfMiddle, string[]? vals)> results = [];
        foreach (var (left, right) in TestCases)
        {
            var vals = OriginalDiffMatchPatch.diff_halfMatch(left, right);
            var hasCommonHalfMiddle = vals is not null;
            results.Add((hasCommonHalfMiddle, vals));
        }
        return results;
    }

    public static List<bool> NewApproach()
    {
        List<bool> results = [];
        foreach (var (left, right) in TestCases)
        {
            var hasCommonHalfMiddle = left.TryFindCommonHalfMiddle(
                right,
                out var leftPrefixSpan,
                out var leftSuffixSpan,
                out var rightPrefixSpan,
                out var rightSuffixSpan,
                out var commonMiddleSpan
            );
            results.Add(hasCommonHalfMiddle);
        }
        return results;
    }

    [Benchmark]
    public void BenchmarkLegacy()
    {
        LegacyApproach();
    }

    [Benchmark]
    public void BenchmarkNew()
    {
        NewApproach();
    }
}
